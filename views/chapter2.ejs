<%- include("header") -%>

        <!-- Sidebar -->
        <nav
        class="w3-sidebar activecolor w3-bar-block w3-collapse  w3-animate-left w3-light-grey"
        id="mySidebar"
      >
        <a
          href="javascript:void(0)"
          onclick="w3_close()"
          class="w3-right w3-xlarge w3-padding-large w3-hover-teal w3-hide-large"
          title="Close Menu"
        >
          <i class="fa fa-remove"></i>
        </a>
        <h4 class="w3-text-black">Algorithms</span> Introduction</h4>
        
        <a  target="_top" class="w3-bar-item w3-button w3-round-xxlarge" href="/chapter1#properties" >Properties</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter1#development">Development</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter1#analysis">Algorithm Analysis</a>
        
            
        <h4 class="w3-text-black">Data</span> Structures</h4>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge  active" href="/chapter2#Definition">Definition</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter2#abstract">Abstract Data types</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter2#linear">Linear Data Structures</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter2#nonlinear">Non-Linear Data Structures</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter2#operations">Operations on data structures</a>
      
        <h4 class="w3-text-black">All</span> Together</h4>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge" href="/chapter3#writing">Writing Algorithms</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter3#example">Algorithms Example</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter3#implementation">Algorithm Implementation</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter3#strategy">Algorithmic Strategies</a>
    
        <h4 class="w3-text-black">Performance </span> Analysis</h4>
  
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge" href="/Chapter4#analysis ">Analysis of algorithms</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge" href="/Chapter4#empirical">Empirical/Experimental Analysis</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge" href="/Chapter4#analytical">Analytical Method</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/Chapter4#common">Common Functions used in analysis.</a>
        
        <h4 class="w3-text-black">Asymptotic </span>Notations</h4>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter4#oh">Big oh Notation</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter4#omega">Omega Notation</a>
        <a target="_top" class="w3-bar-item w3-button w3-round-xxlarge " href="/chapter4#theta">θ Notation</a>
  
      </nav>
  


    <!-- Overlay effect when opening sidebar on small screens -->
    <div
      class="w3-overlay w3-hide-large"
      onclick="w3_close()"
      style="cursor: pointer"
      title="close side menu"
      id="myOverlay"
    ></div>

    <!-- Main content: shift it to the right by 250 pixels when the sidebar is visible -->
    <div class="w3-main" style="margin-left: 250px">
      <div class="w3-row w3-padding-64">
        <div class=" w3-container">
          <h2 class="w3-text-teal" id = "Definition">Data Structures Definition</h2>
          <p>
           The design of an efficient algorithm for the solution of the problem calls for the inclusion of appropriate <strong class="w3-text-teal">data structures</strong>.
            <p>A clear, unambiguous set of instructions following the properties of the algorithm alone does not contribute to the efficiency of the solution.
              	It is essential that the data on which the program need to work on are appropriately structured to suit the needs of the problem, thereby contributing to the efficiency of the solution
              </p>
            <p>
              For example, let us consider the problem of searching for a telephone number of a person, in the telephone directory.
              <li>This will be easy if the data is sorted according to alphabetical order of the subscriber’s names</li>
              <li>	However when the data is unstructured, the search algorithm turns out to be crude and hence inefficient.</li>
            </p>

              <p>	This is a classic example to illustrate the significant role played by data structures in the
                efficiency of the algorithms.
           </p>
              <h6>Formal Definition</h6>
              <p>All in all <strong class="w3-text-teal">data structures</strong> are simply the study of various ways 
                of organizing data in a computer so that the information can be manipulated by systematic and step by step procedure called <strong class="w3-text-teal">algorithms.</strong></p>
                <p>The data structure can be defined as the collection of elements and all the possible operations which are required for those set of elements. In other words data structure will tell us which are the elements
                   required as well as the legal operations on those set of elements.</p>
          </p>
        </div>
        
      </div>

      <div class="w3-row">
        <div class="w3-container">
          <h3 class="w3-text-teal" id="#abstract">Abstract Data types</h3>
          
          <ul>
            
            <li>A <strong class="w3-text-teal">data type</strong>- refers to the type of values that variables in a programming language hold. Thus data types of integer, real, character, Boolean which are inherently provided in programming languages are referred as <strong class="w3-text-teal">primitive data types</strong>.</li>
            <li>A list of  elements is  called  a  <strong class="w3-text-teal">data  object.</strong>  For  example a list of
              integers or a list of alphabetical strings as data objects
              </li>
            <li>The data objects which comprise the data structure and their fundamental operations are known as <strong class="w3-text-teal">Abstract Data Type (ADT)</strong></li>
            <li>In other words, an ADT is defined as a set of data objects D
              defined over a domain L and supporting a list of operations O.
              </li>
          </ul>
          <h3 class="w3-text-teal">Characteristics of Abstract Data Structures</h3>
          <p>
            <ul class="w3-twothird"> 
              <li>Provides a description of elements in terms of data types.</li>
              <li>Defines relationship among individual elements.</li>
              <li>Valid operations and parameters to be passed.</li>
              <li>Error conditions associated with the operations.</li>

              <h4 class="w3-text-teal">For example an ADT stack can be defined by packaging together the following operations</h4>
              
              <li> <strong>Push</strong>  – insert an item into the stack</li>
              <li> <strong>Pop</strong> – Returns a data item from stack</li>
              <li> <strong>peek()-</strong> - Returns top most element without removing it from the stack</li>
              <li> <strong>size()</strong> – Returns the number of elements currently in the stack</li>
              <li> <strong>isEmpty()</strong> – Returns true if stack is empty, and false otherwise.</li>
              
            </ul>
            <div class="w3-center">
              <img class="mb-4" src="images\ADT.jpg" alt="aDT" >
            </div>
            <p>Set of operations associated with ADT is called interface.
             	Elements of ADT data structure are manipulated through an interface
              </p>
              
          </p>
        </div>
        
      </div>

      <div class="w3-row w3-padding-64">
        <div class=" w3-container">
          <h3 class="w3-text-teal" id="linear">Linear Data Structures</h3>
          <p>
            <strong class="w3-text-teal">Linear Data structures </strong> –are data structures in which data is arranged in a list or in a straight line. 
            They are further classified as sequential and linked representations.
          </p>
          <div class="w3-center">
            <img class="mb-4" src="images\LDS.jpg" alt="LDS" >
          </div>

          <h3>Classification of Linear Data Sructures</h3>

          <p><strong class="w3-text-teal">Linked lists</strong> consist of data items called nodes. Each data element contains two field; information field and a link field connected to another data items.<img class="mb-4" src="images\LINKEDLIST.jpg" alt="LINKEDLIST" ></p>
          <p>In<strong class="w3-text-teal"> a stack</strong> last item added can be taken off first. Works on the principle of LIFO<img class="mb-4" src="images\STACK.jpg" alt="Stack" ></p>
          <p>A<strong class="w3-text-teal"> queue</strong> is a data structure in which an item can be added at one end and removed from the other end. It works on the principle of FIFO.<img class="mb-4" src="images\QUEUE.jpg" alt="QUEUE" ></p>
          <p>An<strong class="w3-text-teal"> array </strong>is a collection of homogeneous items<img class="mb-4" src="images\ARRAY.jpg" alt="ARRAY" ></p>

        </div>
        
        <div class="w3-row">
          <div class="w3-container">
            <h3 class="w3-text-teal" id="#nonlinear">Non-Linear Data Structures</h3>
            
            <p>
              <strong class="w3-text-teal">Non-linear data structures  </strong> –are the data structures in which data may be arranged in hierarchical manner.
            </p>

            <img class="mb-4" src="images\NLDS.jpg" alt="NLDS" >

            <h3>Classification of Non-Linear Data Structures</h3>
            <p>A<strong class="w3-text-teal"> tree</strong> is a data structure that consists of a set of data items called nodes.
              <ul>
              <li>It contains an information field and a link filed, which is address of related element</li>
              <li>There are variations of trees i.e binary, AVL, Red and Black, Splay,
                B-trees or heap
                </li>
              </ul>
              
              <img class="mb-4" src="images\TREE.jpg" alt="TREE" ></p>
          <p>A<strong class="w3-text-teal"> graph </strong>Graph is a set of data items, called vertices or nodes, connected by links termed as edges or arcs.<img class="mb-4" src="images\GRAPH.jpg" alt="graph" ></p>
            <br>
            <br>
            <H5>CLASSIFICATION OF DATA STRUCTURES</H5>
            <img class="mb-4" src="images\CLASSIFICATIONOFDS.jpg" alt="LDS" >
            </p>
          </div>
          
        </div>

        <!-- New section -->
        <div class="w3-row">
          <div class="w3-container">
            <h3 class="w3-text-teal" id="#operations">Operations on Data Structures</h3>
            
            
              <ul>
                <li>In order to process elements of a data structure some kind of operation is required.</li>
                <li>A basic operation involves <strong class="w3-text-teal">creating</strong> a data structure and reserving storage space for the elements.</li>
              <li>Another operation is <strong class="w3-text-teal">deleting</strong> the data structure, which removes the data items and releases the allocated storage space
                </li>
              </ul>
              
              <p>Other common operations are: inserting, sorting, searching, merging, traversing.</p>

              <ul>
                <li><strong class="w3-text-teal">Inserting</strong> involves adding a data item in a specified position to the data structure.</li>
                <li><strong class="w3-text-teal">sorting</strong> is arranging of data items in specific order.</li>
                <li><strong class="w3-text-teal">Searching</strong> means finding an item which matches with a given key.</li>
                <li><strong class="w3-text-teal">Merging</strong> involves combining two sets of data items according to some criterion.</li>
                <li><strong class="w3-text-teal">Traversing</strong> means accessing each element of a data structure at least once. Used particularly on graphs and also referred to as visiting of vertices on a graph</li>
              </ul>

          </div>
          
        </div>

        <!-- End section -->

      </div>

      <div class="w3-clear nextprev w3-padding-32">
        <a class="w3-left w3-button w3-medium w3-round-xxlarge" style="background-color: #009494;" href="/chapter1"> Previous</a>
      <a class="w3-right w3-button w3-medium w3-round-xxlarge" style="background-color: #009494;" href="/chapter3">Next</a>
      </div>

      <%- include("footer") -%>